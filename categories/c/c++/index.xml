<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C/C&#43;&#43; on Fenying</title>
    <link>https://fenying.github.io/categories/c/c&#43;&#43;/</link>
    <description>Recent content in C/C&#43;&#43; on Fenying</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright 2020 Angus Fenying</copyright>
    
	<atom:link href="https://fenying.github.io/categories/c/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在 Visual Studio 2015 下编译 LibUV-1.9.1</title>
      <link>https://fenying.github.io/post/2016/09/25/compile-libuv-with-vs2015/</link>
      <pubDate>Sun, 25 Sep 2016 22:21:00 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2016/09/25/compile-libuv-with-vs2015/</guid>
      <description>&lt;p&gt;使用 VS2015 编译 LibUV 的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>记一次 libiconv 编译错误</title>
      <link>https://fenying.github.io/post/2016/07/07/memo-about-libiconv-compilation-failure/</link>
      <pubDate>Thu, 07 Jul 2016 09:54:31 +0000</pubDate>
      
      <guid>https://fenying.github.io/post/2016/07/07/memo-about-libiconv-compilation-failure/</guid>
      <description>&lt;p&gt;今天编译 PHP 时漏了安装 libiconv，于是去编译了一次 libiconv，结果编译报错了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOS 6.7 x64 下更新 GCC 5.2</title>
      <link>https://fenying.github.io/post/2015/12/25/install-gcc-5.2-in-centos-6.7/</link>
      <pubDate>Fri, 25 Dec 2015 11:45:35 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2015/12/25/install-gcc-5.2-in-centos-6.7/</guid>
      <description>&lt;p&gt;众所周知，CentOS作为服务器操作系统被广泛使用，然而其包含的 yum 源中提供的软件版本是非常旧的。比如 GCC，最新版本竟然还是 4.4.x。前天尝试编译 MongoDB 3.2.0，都要求使用 GCC 4.8.1了（GCC 4.8+支持C++ 11）。&lt;/p&gt;
&lt;p&gt;只好手动编译一次GCC。注意这并不复杂，但是时间很长。且要预留6G以上的空间给编译器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio 2015 中使用 OpenSSL</title>
      <link>https://fenying.github.io/post/2015/12/02/using-openssl-with-vs2015/</link>
      <pubDate>Wed, 02 Dec 2015 00:09:26 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2015/12/02/using-openssl-with-vs2015/</guid>
      <description>&lt;p&gt;在 Visual Studio 2015 中使用 OpenSSL 的记录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于 Visual C&#43;&#43; 里面的 warning C4661</title>
      <link>https://fenying.github.io/post/2015/09/11/warning-c4661-in-visual-c&#43;&#43;/</link>
      <pubDate>Fri, 11 Sep 2015 13:44:41 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2015/09/11/warning-c4661-in-visual-c&#43;&#43;/</guid>
      <description>&lt;p&gt;最近写 C++ 类模板时遇到的一个 C4661 warning，记载于此。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用计算机模拟实现 Enigma 加密机（C语言版）</title>
      <link>https://fenying.github.io/post/2014/07/30/simulate-enigma-by-c-language/</link>
      <pubDate>Wed, 30 Jul 2014 20:37:04 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2014/07/30/simulate-enigma-by-c-language/</guid>
      <description>&lt;p&gt;Enigma，二战时期与德国战车捆绑的顶级加密机，它是世界上首台具有比较强悍的加密算法的加密机器，它彻底淘汰了手功加密。而为了破解它，英国政府几乎倾家荡产。（可阅读《密码传奇》）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>将无源代码的 lib 内函数添加到 dll 输出函数</title>
      <link>https://fenying.github.io/post/2014/01/30/expose-method-in-dll-from-static-library/</link>
      <pubDate>Thu, 30 Jan 2014 11:52:51 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2014/01/30/expose-method-in-dll-from-static-library/</guid>
      <description>&lt;p&gt;今天想把一个用汇编写的 lib 整合到一个 dll 的输出函数中，用 &lt;code&gt;_declspec(dllexport)&lt;/code&gt; 导出该函数不可行，最后用 def 模块导出文件，终于在 Visual Studio 2012 下成功通过测试。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于VC预定义常量_WIN32，WIN32，_WIN64</title>
      <link>https://fenying.github.io/post/2013/08/25/vc-compilation-constants/</link>
      <pubDate>Sun, 25 Aug 2013 11:32:23 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2013/08/25/vc-compilation-constants/</guid>
      <description>&lt;p&gt;VC2012 下写 Windows 程序时，有时需要判断编译环境。在之前的文章《判断程序是否运行在 Windows x64 系统下。》里说过如何在运行期间判断系统环境，但在编译时如何判断？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>判断程序是否运行在 Windows x64 系统下</title>
      <link>https://fenying.github.io/post/2013/08/22/detect-if-x64-on-runtime/</link>
      <pubDate>Thu, 22 Aug 2013 17:03:24 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2013/08/22/detect-if-x64-on-runtime/</guid>
      <description>&lt;p&gt;以下功能代码判断是否运行在 Windows x64 下。本例使用 Windows API 函数 IsWow64Process，具体请参考MSDN文档：http://msdn.microsoft.com/en-us/library/ms684139(VS.85).aspx&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用 VC2012 产生脱离VC运行库的 C/C&#43;&#43; 程序</title>
      <link>https://fenying.github.io/post/2013/08/02/build-program-without-vc-runtime/</link>
      <pubDate>Fri, 02 Aug 2013 20:14:20 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2013/08/02/build-program-without-vc-runtime/</guid>
      <description>&lt;p&gt;最近在研究如何使一个VC编译的程序脱离VC运行库，也就是msvcrXX.dll。经过多次尝试，总算有所收获。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VC 的 warning LNK4221 警告</title>
      <link>https://fenying.github.io/post/2013/07/27/vc-lnk4221-warning/</link>
      <pubDate>Sat, 27 Jul 2013 14:28:13 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2013/07/27/vc-lnk4221-warning/</guid>
      <description>&lt;p&gt;今天编译静态链接库时，VC提示了 LNK4221 警告。虽然没什么影响（起码暂时没遇到），也特别去查了下警告的由来。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VB调用C函数时数组传参的问题</title>
      <link>https://fenying.github.io/post/2013/06/23/pass-array-from-vb-to-c/</link>
      <pubDate>Sun, 23 Jun 2013 13:21:02 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2013/06/23/pass-array-from-vb-to-c/</guid>
      <description>&lt;p&gt;其实这是对《VC++写DLL给VB使用》一文的补充，网易不让编辑太古老的文章……&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows 标准控件：按钮控件的使用</title>
      <link>https://fenying.github.io/post/2011/07/20/windows-sdk-command-button/</link>
      <pubDate>Wed, 20 Jul 2011 21:34:45 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2011/07/20/windows-sdk-command-button/</guid>
      <description>&lt;p&gt;本文展示 Windows 标准控件之按钮控件的使用方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于 VC2008 中 wprintf 输出中文乱码问题</title>
      <link>https://fenying.github.io/post/2010/07/03/chinese-garbled-in-vc-wprintf/</link>
      <pubDate>Sat, 03 Jul 2010 11:56:33 +0800</pubDate>
      
      <guid>https://fenying.github.io/post/2010/07/03/chinese-garbled-in-vc-wprintf/</guid>
      <description>&lt;p&gt;最近写编码转换，发现MB编码转换成 Unicode 后，中文总是乱码。
起初以为是自己写错了，但测试后发现转换结果是完全正确的。
再测试一下，发现居然连常字符串都不能正常输出……&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>